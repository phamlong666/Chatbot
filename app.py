import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
from openai import OpenAI
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import re
import os
from PIL import Image

plt.rcParams['font.family'] = 'DejaVu Sans'
plt.rcParams['font.size'] = 10
plt.rcParams['axes.labelsize'] = 12
plt.rcParams['axes.titlesize'] = 14
plt.rcParams['xtick.labelsize'] = 10
plt.rcParams['ytick.labelsize'] = 10
plt.rcParams['figure.titlesize'] = 16

SCOPES = ["https://www.googleapis.com/auth/spreadsheets"]

if "google_service_account" in st.secrets:
    info = st.secrets["google_service_account"]
    creds = Credentials.from_service_account_info(info, scopes=SCOPES)
    client = gspread.authorize(creds)
else:
    st.error("(Error) Kh√¥ng t√¨m th·∫•y google_service_account trong secrets. Vui l√≤ng c·∫•u h√¨nh.")
    st.stop()

openai_api_key_direct = st.secrets.get("openai_api_key")

if openai_api_key_direct:
    client_ai = OpenAI(api_key=openai_api_key_direct)
    st.success("(Success) ƒê√£ k·∫øt n·ªëi OpenAI API key.")
else:
    client_ai = None
    st.warning("(Warning) Ch∆∞a c·∫•u h√¨nh API key OpenAI. Vui l√≤ng th√™m v√†o st.secrets.")

def get_sheet_data(sheet_name):
    try:
        spreadsheet_url = "https://docs.google.com/spreadsheets/d/13MqQzvV3Mf9bLOAXwICXclYVQ-8WnvBDPAR8VJfOGJg/edit"
        sheet = client.open_by_url(spreadsheet_url).worksheet(sheet_name)
        return sheet.get_all_records()
    except gspread.exceptions.WorksheetNotFound:
        st.error(f"(Error) Kh√¥ng t√¨m th·∫•y sheet '{sheet_name}'. Vui l√≤ng ki·ªÉm tra t√™n sheet.")
        return None
    except Exception as e:
        st.error(f"(Error) L·ªói khi m·ªü Google Sheet '{sheet_name}': {e}")
        return None

logo_path = "logo_hinh_tron.jpg"

uploaded_logo = st.sidebar.file_uploader("T·∫£i logo (jpg/png)", type=["jpg", "png"])
if uploaded_logo:
    st.sidebar.image(uploaded_logo, width=75)
    with open(logo_path, "wb") as f:
        f.write(uploaded_logo.read())
elif os.path.exists(logo_path):
    with open(logo_path, "rb") as f:
        st.sidebar.image(f.read(), width=75)
else:
    st.sidebar.warning(f"(Warning) Kh√¥ng t√¨m th·∫•y file logo t·∫°i ƒë∆∞·ªùng d·∫´n: {logo_path}. Vui l√≤ng t·∫£i l√™n.")

st.title("ü§ñ Chatbot ƒê·ªôi QLƒêLKV ƒê·ªãnh H√≥a")

user_msg = st.text_input("B·∫°n mu·ªën h·ªèi g√¨?")

if st.button("G·ª≠i"):
    user_msg_lower = user_msg.lower()

    if "l·∫•y d·ªØ li·ªáu sheet" in user_msg_lower:
        match = re.search(r"l·∫•y d·ªØ li·ªáu sheet\s+['\"]?([^'\"]+)['\"]?", user_msg_lower)
        if match:
            sheet_name_from_query = match.group(1).strip()
            st.info(f"ƒêang c·ªë g·∫Øng l·∫•y d·ªØ li·ªáu t·ª´ sheet: **{sheet_name_from_query}**")
            records = get_sheet_data(sheet_name_from_query)
            if records:
                df_any_sheet = pd.DataFrame(records)
                if not df_any_sheet.empty:
                    st.subheader(f"D·ªØ li·ªáu t·ª´ sheet '{sheet_name_from_query}':")
                    st.dataframe(df_any_sheet)
                    st.success(f"(Success) ƒê√£ hi·ªÉn th·ªã d·ªØ li·ªáu t·ª´ sheet '{sheet_name_from_query}'.")
                else:
                    st.warning(f"(Warning) Sheet '{sheet_name_from_query}' kh√¥ng c√≥ d·ªØ li·ªáu.")
        else:
            st.warning("(Warning) Vui l√≤ng cung c·∫•p t√™n sheet r√µ r√†ng. V√≠ d·ª•: 'l·∫•y d·ªØ li·ªáu sheet DoanhThu'.")

    else:
        if client_ai:
            try:
                response = client_ai.chat.completions.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": "B·∫°n l√† tr·ª£ l√Ω ·∫£o c·ªßa ƒê·ªôi QLƒêLKV ƒê·ªãnh H√≥a."},
                        {"role": "user", "content": user_msg}
                    ]
                )
                st.write(response.choices[0].message.content)
            except Exception as e:
                st.error(f"(Error) L·ªói khi g·ªçi OpenAI: {e}. Vui l√≤ng ki·ªÉm tra API key ho·∫∑c quy·ªÅn truy c·∫≠p m√¥ h√¨nh.")
        else:
            st.warning("(Warning) Kh√¥ng c√≥ API key OpenAI. Vui l√≤ng th√™m v√†o st.secrets.")
